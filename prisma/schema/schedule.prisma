/// Um agendamento prévio deve validar se o médico está disponível na data e hora marcada:
/// Para esse regra devemos validar se o médico possui uma escala para a data e hora marcada 
/// e se ele não possui outro agendamento para a mesma data e hora

/// Um agendamento instantâneo deve, a partir do ScheduleType.immediate filtrar os médicos que possuem escala de plantão
/// e os que não possuem agendamento para a mesma data e hora

enum ScheduleType {
    previously
    immediate
}

enum ScheduleStatus {
    scheduled
    confirmed
    inProgress
    completed
    cancelled
    noShow
}

/// 
/// Schedule
/// 
model Schedule {
    id           Int            @id @default(autoincrement())
    type         ScheduleType
    status       ScheduleStatus @default(scheduled)
    notes        String?
    cancelReason String?

    scheduledDate DateTime // Data data do agendamento
    scheduledTime String // Hora do agendamento (ex: "14:30" formato HH:mm)

    // Pacient
    pacient   Pacient @relation(fields: [pacientId], references: [id])
    pacientId Int

    // healthPrefessional
    healthProfessional   HealthProfessional @relation(fields: [healthProfessionalId], references: [id])
    healthProfessionalId Int

    // Consultation History
    consultationHistory ConsultationHistory?

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by recepcionist
    recepcionist   Recepcionist? @relation(fields: [recepcionistId], references: [id])
    recepcionistId Int?

    // Registered by admin
    admin   Admin? @relation(fields: [adminId], references: [id])
    adminId Int?

    // Constraints para evitar conflitos
    @@unique([scheduledDate, scheduledTime, healthProfessionalId])
    @@index([healthProfessionalId, scheduledDate, scheduledTime])
    @@index([pacientId, scheduledDate, scheduledTime])
    @@index([status, scheduledDate, scheduledTime])
}
