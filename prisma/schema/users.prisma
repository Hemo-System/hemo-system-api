enum ProfessionalRole {
    admin
    recepcionist
    healthProfessional
}

/// 
/// Admin
/// 
model Admin {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(admin)
    name     String
    email    String           @unique
    password String

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Users registered by admin an admin
    recepcionistsRegistered            Recepcionist[]
    healthProfessionalsRegistered      HealthProfessional[]

    // HealthProfessionalScales registered by admin
    healthProfessionalScalesRegistered HealthProfessionalScale[]

    // Pacients registered by admin
    pacientsRegistered Pacient[]

    // Schedules registered by admin
    schedulesRegistered Schedule[]
}

/// 
/// Recepcionist
/// 
model Recepcionist {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(recepcionist)
    name     String
    email    String           @unique
    password String

    // Schedules
    schedulesRegistered Schedule[]

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int

    // Pacients registered by recepcionist
    pacientsRegistered Pacient[]
}

/// 
/// HealthProfessional
/// 
model HealthProfessional {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(healthProfessional)
    name     String
    phone    String
    email    String           @unique
    password String

    specialty            String
    professionalRegister String

    // Schedules
    schedules Schedule[]

    // HealthProfessionalScales
    scales HealthProfessionalScale[]

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int
}

model HealthProfessionalScale {
    id           Int     @id @default(autoincrement())
    isPlantonist Boolean @default(false)

    date      DateTime @default(now())
    startTime String // "07:30" formato HH:mm
    endTime   String // "17:00" formato HH:mm

    // HealthProfessional
    healthProfessional   HealthProfessional @relation(fields: [healthProfessionalId], references: [id])
    healthProfessionalId Int

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int

    // Um profissional n√£o pode ter escalas sobrepostas no mesmo dia
    @@unique([date, startTime, endTime, healthProfessionalId])
    @@index([healthProfessionalId, isActive])
    @@index([isPlantonist, isActive])
}

