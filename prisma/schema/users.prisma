enum ProfessionalRole {
    admin
    recepcionist
    healthProfessional
    nurse
}

/// 
/// Admin
/// 
model Admin {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(admin)
    name     String
    email    String           @unique
    password String

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Users registered by admin an admin
    recepcionistsRegistered            Recepcionist[]
    healthProfessionalsRegistered      HealthProfessional[]
    healthProfessionalScalesRegistered HealthProfessionalScale[]
    nursesRegistered                   Nurse[]

    // Pacients registered by admin
    pacientsRegistered Pacient[]

    // Schedules registered by admin
    schedulesRegistered Schedule[]
}

/// 
/// Recepcionist
/// 
model Recepcionist {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(recepcionist)
    name     String
    email    String           @unique
    password String

    // Schedules
    schedulesRegistered Schedule[]

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int

    // Pacients registered by admin a recepcionist
    pacientsRegistered Pacient[]
}

/// 
/// HealthProfessional
/// 
model HealthProfessional {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(healthProfessional)
    name     String
    phone    String
    email    String           @unique
    password String

    specialty            String
    professionalRegister String

    // Schedules
    schedules Schedule[]

    // HealthProfessionalScales
    scales HealthProfessionalScale[]

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int
}

/// 
/// HealthProfessionalScale
/// 
model HealthProfessionalScale {
    id           Int      @id @default(autoincrement())
    start        DateTime @default(now())
    exit         DateTime @default(now())
    isPlantonist Boolean

    // HealthProfessional
    healthProfessional   HealthProfessional @relation(fields: [healthProfessionalId], references: [id])
    healthProfessionalId Int

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int

    @@unique([start, exit, healthProfessionalId])
}

/// 
/// Nurse
/// 
model Nurse {
    id       Int              @id @default(autoincrement())
    role     ProfessionalRole @default(nurse)
    name     String
    email    String           @unique
    password String
    coren    String

    // InfermaryAdmission
    infermaryAdmission InfermaryAdmission[]

    // Audit fields
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    isActive  Boolean  @default(true)

    // Registered by admin
    admin   Admin @relation(fields: [adminId], references: [id])
    adminId Int
}
